*****************************************
*ファミコンディスクシステム技術資料
*****************************************
ブラッド・テイラー (BTTDgroup@hotmail.com)
第3回リリース 2004年4月23日
ファミコンコミュニティ http://nesdev.parodius.com に感謝します。
NoriとGorohに感謝します。
Sgt.Bowhackにはそれぞれの翻訳に感謝します。
そして、"D "として知られる方が、ずいぶん前にNESdevに投稿したROM BIOSの予備的なドキュメントに感謝します。
にも。
推奨文献 任天堂の特許文書。
FDSの統合電子サウンドシンセサイザー(U.S.#4,783,812)の動作に関する任天堂の特許文書。
はこの文書ではカバーされていません。

注：この文書を正しく表示するには、テキストビューワーに2つのものが必要です： 
1. 古典的なVGAベースのテキストモード256文字セットと、線画文字に対応していること。
ワードラップ。2.ワードラップ。ウインドウズ・メモ帳は、この2つを簡単に行うことができる。
フォントをターミナル・スタイルに変更すれば、この2つが簡単にできる。

+----------------------------+
|この文書で説明すること
+----------------------------+
- 序文
- RAMアダプターのハードウェアに関する一般情報
- 2C33/LH2833ピンの命名法と信号の説明
- RAMアダプタのディスク関連ハードウェア機能
- ROM BIOSの一般情報
- FDSディスクのブート手順
- 低レベルディスクI/Oポートプログラミングの適切な手順
- ディスクシステムゲームがROM BIOSとどのように相互作用するか
- ROM BIOSディスクI/Oインターフェースルーチンと構造体
- ROM BIOSディスクI/Oルーチンのエミュレーションに関する考慮事項
- FDSディスクドライブの簡単な動作説明
- FDSデータ転送プロトコル
- FDSディスク磁気エンコーディング形式
- 低レベル・ディスク・データ記憶レイアウト
- FDSディスク上のファイルのCRC計算
- RAMアダプターのピンアウトとその機能
- ディスクドライブをエミュレートする手順
- 通常起動しないFDSディスクゲームを起動させる
- コピープロテクトの回避
- ROM BIOSの逆アセンブル

*********
*序文

ハードウェアの限界（そして2年という製品サイクルの短さ）を考慮しても、この製品が選ばれた理由を理解するのはそれほど難しいことではない、 
年という製品サイクルの短さ）を考えても、ファミコン・ディスクシステムが 
ファミコン・ディスクシステムが、初めてそれを目にした人すべてに感動を与え続けている理由を理解するのは、それほど難しいことではない。
ファミコン/FCを本物のパーソナルコンピューティングプラットフォームに変えたのだ。
フロッピーディスクを使って、好きなゲームを起動する。
自分の目で確かめなければわからないものだ。さらに 
任天堂のゲームに初めてセーブ機能が搭載された。
FDSフォーマットで登場した。FDS版を見たことのないゲーマーにとって 
キッド・イカロス』、『メトロイド』、『悪魔城ドラキュラ』のようなゲームのFDS版を見たことがなかったゲーマーは、通常、すべてのゲームがFDS版であることに非常に感動する。
これらのゲームが元々セーブ機能付きでFDSで発売されたという事実に、非常に感銘を受ける。
セーブ機能付きでFDSで発売されたという事実に感動する。
悪魔城ドラキュラを除いては、コナミはケチだった。
を除いては）。最後に 
最後に、ファミコン/FCゲームの従来のサウンドは、「粗雑」と言えるかもしれない。
FDSの余分なサウンドチャンネルを利用したゲームに比べれば。
FDSにある余分なサウンドチャンネルを利用したゲームと比較すると、従来のファミコン/FCゲームのサウンドはほとんど「粗悪」と言えるでしょう。このサウンドを実際に体験した人は、次のように同意するでしょう。
ゲーム体験に新たな一面を加えてくれる。結論：FDS 
はクールでユニークなハードウェアのひとつです。

この "FDSローダー "プロジェクトは、インターネットから入手したあらゆる種類のFDSゲームを、自作のステレオAVファミコン・コンソールでプレイしたいという私の願望に触発されたものだ。
ゲームを自作のステレオAVファミコンでプレイしたいという私の願望に触発されました。そこで私は 
そこでFDS通信がどのように行われているのか、すぐに興味を持つようになった。
というのも、当時、私は既存の英語版FDSのテクニカルドキュメントをまったく知らなかったからだ。
というのも、当時、FDS通信がどのように行われているのかを説明した、英語で書かれたFDSの技術資料がなかったからだ。
というのも、当時、FDSがどのように実現されているのかを説明した、英語で書かれたFDSの技術参考書を私は知らなかったからだ。結局、プロジェクトは完了し、すべてがうまくいった。
しばらくは満足していた。これは、私が 
FDSのRAMアダプタとハードディスク・ドライブ（あるいは3.5.5.0.0.0.0.0.0. 
ハードディスク・ドライブ（あるいは3.5インチ・フロッピーディスク・ドライブ）との間の直接インターフェースを設計し、PCの介入をすべて取りやめようと考え始めるまでだった。
PCの介在を一切排除することを考え始めたのです。

これを行う上での最大の問題は、RAMアダプターが12KB/秒という非常に遅い速度でデータを転送するだけでなく 
データ転送速度が12KB/秒と非常に遅いだけでなく、RAMアダプターの転送プロトコルが、一般的な転送プロトコルとまったく互換性がないことだ。
転送プロトコルは、フロッピーやハードディスクに見られる一般的な 
フロッピーやハードディスク・ドライブに見られる一般的な転送プロトコルとはまったく互換性がないのだ（たとえば、標準的な3.5インチ・フロッピーは4096KB/秒でデータを保存する）。
フロッピーは4096ビットのブロック（セクタ）でデータを保存するが、FDSディスクのデータ保存ブロックは動的な長さである）。
ブロックは動的な長さです）。この非互換性を回避するには 
非互換性を回避するためには、私がPC用に書いたプログラムに似たものをマイクロコントローラー用に書かなければならない。
マイクロコントローラー用に書かなければならない。
アダプタとハードディスク・ドライブ（またはその類）の間のインターフェイスとなる。私は効率重視の人間なので、次のように考えた。
私は効率重視の人間なので、より多くのメモリと処理能力を持つマイクロコントローラーを使うことを考えた。
私は効率重視の人間なので、インターフェイスするものよりも多くのメモリと処理能力を持つマイクロコントローラーを使うのは馬鹿げていると思った。
そこで、ディスク通信にもRAMアダプターを使うのはどうだろうと考え始めた。
通信にも使えるようにするにはどうしたらいいかと考え始めました。

FDS用に書かれたほとんどのソフトウェア（ゲーム）は、ディスクアクセスそのものを行わないことは周知の事実である。
ROMのBIOSに依存している。
に依存しています。ゲームが行うのは、ROM BIOSにファイル名（またはファイル数）を提供することだけです。
を提供するだけである。一般に知られていないのは 
ゲームがどのようにこれを行うかについての詳細である。基本的に、もしこのインターフェイスをクラックできれば 
このインターフェイスを解読できれば、ROM BIOSのコードを書き直して、ゲームがディスクアクセスを要求したときに 
ゲームがディスク・アクセスを要求したとき、私のルーチンは従来のBIOSと同じようにその呼び出しを処理する。
しかし、ディスク間のデータ転送にFDSのディスクI/Oポートを使うのではなく、FDSのディスクI/Oポートを使う。
ディスク間のデータ転送にFDSのディスクI/Oポートを使うのではなく 
のI/Oポートを使うことになる。

それが2002年の私の目標だった。
FDSのROM BIOSコードを研究し、ゲームがディスク・サブルーチンにアクセスする方法を解明することだった。言うまでもなく、その目標は 
この目標は実現され、ここに文書化された。この追加（2004年）では 
FDSディスクドライブの技術的な動作に関する情報、ROM BIOS 
の分解、2C33とLH2833チップのピン配置の文書化、さらにFDSディス 
固定技術、およびコピープロテクト回避に関する情報など、すべての情報がここに追加されました。
私のこれまでのFDS関連の研究成果すべてを統合し、この1つの文書にまとめました。
この1つの文書にまとめました。

*******************************
*簡単なRAMアダプター情報
*******************************
RAMアダプターは、ファミコン/ファミコンのシステムハードウェアとFDSのディスクドライブをインターフェイスするハードウェアです。
システムハードウェアとFDSディスクドライブを接続するハードウェアです。RAM 
カスタム32KB DRAMチップ、パターンテーブル用8KB RAMチップ、ミキシング用回路が搭載されています。
パターンテーブル用の8KB RAMチップ、FDSのオーディオチャンネルをシステムオーディオとミキシングするための回路、そしてRAMアダプタの心臓部です。
そしてRAMアダプターの心臓部である2C33チップです。

DRAMチップ（部品番号：LH2833、シャープ製）（$6000. 
DRAMチップ（部品番号：LH2833、シャープ製）は、2C33チップと多くの接続がある。
明らかに、2C33はDRAMのリフレッシュ・サイクルとアドレッシングを制御している、 
数本のシステム・アドレス・ラインだけがDRAMに直接接続されているからだ）。
DRAMのタイミングは謎だが、バスクロック・サイクルごとにランダムにアクセスできることは明らかだ。
バス・クロック・サイクルごとにランダムにアクセスできる。

BIOS ROM（$E000..$FFFFにマップされている）は、DRAMチップに統合されている（その可能性は低い）か、2つのDRAMチップに統合されている（その可能性は低い）。
チップ（可能性は低い）か2C33チップ（可能性が高い）のどちらかに統合されている。明確な位置は 
は不明である。

パターン・テーブル・メモリーに使われている8KBのRAMチップは、PPUのアドレス空間$0000. 
アドレス空間$0000..$1FFFに完全にマップされている。2C33はネームテーブルのミラーリングを制御できるが 
それ以外には、RAMアダプタにグラフィック制御に関連するハードウェアはない。
グラフィック制御に関連するハードウェアはない。

RAMアダプターの心臓部である2C33には、ディスクI/Oに関連するすべての回路が搭載されている。
ディスクI/Oに関連するすべての回路と、余分なサウンドチャンネルが含まれています。

****************************************************
*2C33/LH2833 pin nomenclature & signal descriptions*
****************************************************
          ___  ___
         |*  \/   |
/PRG  >01]        [64<  VCC
A14  >02]        [63]  XTAL
A13  >03]        [62]  XTAL
A12  >04]        [61<  VEE
A11  >05]        [60]  (02)
A10  >06]        [59]  (09)
A9   >07]        [58]  (08)
A8   >08]        [57<  R/W
(22)  [09]        [56<  PHI2
(23)  [10]        [55>  /IRQ
(24)  [11]        [54>  AOUT
(04)  [12]        [53<  VEE
(05)  [13]        [52>  SER OUT
(06)  [14]        [51<  SER IN
(03)  [15]        [50>  $4025W.2
A7   >16]  2C33  [49>  $4025W.1
A6   >17]        [48>  $4025W.0
A5   >18]        [47<  $4032R.2
A4   >19]        [46<  $4032R.1
A3   >20]        [45<  $4032R.0
A2   >21]        [44]  EXT0
A1   >22]        [43]  EXT1
A0   >23]        [42]  EXT2
--   [24]        [41]  EXT3
D0   [25]        [40]  EXT4
D1   [26]        [39]  EXT5
D2   [27]        [38]  EXT6
D3   [28]        [37]  EXT7/BATT
D4   [29]        [36<  CHR A10
D5   [30]        [35<  CHR A11
D6   [31]        [34>  VRAM A10
VEE  >32]        [33]  D7
         |________|

          ___  ___
         |*  \/   |
PHI2  >01]        [28<  VCC
(60)  [02]        [27<  A13
(15)  [03]        [26<  A14
(12)  [04]        [25<  /PRG
(13)  [05]        [24]  (11)
(14)  [06]        [23]  (10)
A7   >07]        [22]  (09)
(58)  [08] LH2833 [21<  R/W
(59)  [09]        [20<  VEE
--   [10]        [19]  D4
D5   [11]        [18]  D3
D6   [12]        [17]  D2
D7   [13]        [16]  D1
VEE  >14]        [15]  D0
         |________|

/PRG：NES/FCのA15ラインのNANDをPHI2ラインでゲートしたもの。

A0-A14、D0-D7、R/W、PHI2、/IRQ：NESの6502アドレス、データ、制御、割り込みライン。
割り込み線(詳細は「2A03技術資料」を参照)。

XTAL: 2C33を機能させるために、21.48MHzの水晶振動子を落とすためのリード線。
を機能させるためのリード線。この周波数は、2A03と2C02のクロック周波数と全く同じである。
NTSCベースのファミコンに搭載されている2A03 & 2C02チップのクロック周波数と全く同じであることに注意。

VEE、VCC：それぞれグランドと+5VDCの電源信号。

EXT0-EXT7：これらの双方向ピンは、アドレス＄0にマップされた内部レジスタの内容に関連しています。
アドレス$4026と$4033にマッピングされた内部レジスタの内容に関連する。

4025W.x：このアドレスにマップされた内部ラッチから直接供給される出力。
アドレスにマップされた内部ラッチから直接供給される出力。

4032R.x：アクセス時にこのポートが返す値に影響を与える入力。

SER IN、SER OUT：シリアル入出力信号（FDSディスク・データ信号）。

CHR A10-A11、VRAM A10：PPUミラーリング制御。

AOUT：2C33内蔵サウンド・シンセサイザーのアナログ出力。

(): 括弧内の数字は、2C33とLH33のプライベート・ピン接続を示す。
2C33とLH2833チップ間のプライベートピン接続。文書化されていないが、これらの信号は 
はLH2833のDRAMタイミングを維持する役割がある。

--未使用/未接続。

***********************************
*2C33*のディスク関連ハードウェア
***********************************
2C33のディスク・ハードウェアは、データ入出力線に現れるシリアル・データを処理＆ディスパッチするためだけに存在する。
2C33のディスク・ハードウェアは、データ入出力線に表示されるシリアル・データを処理し、送出するためだけに存在する。他のすべての 
他の制御信号は、FDSポートがプログラムされたバイナリ値を直接反映します。
他の制御信号は、FDSポートがプログラムされたバイナリ値を直接反映します。

2C33内部には、RAWシリアルデータを 
データを、磁気ディスクにバイナリデータを保存するために使用されるプロトコルに変換するために、2C33内部で使用されるいくつかの電子回路があります。
逆も同様)。このことを覚えておいてください。
ディスクデータの入出力は、内部シフトレジスタに直接接続されています。
に直接接続されることが示唆されている。しかし、これは物事を単純化するためのものに過ぎません。実際には、ディスク 
のデータは、RAM アダプターに入出力する前に処理されます。さらに 
さらに、ディスクから読み出された生のシリアル・データには、2C33が一部のシフト・レジスタのクロックとして使用するクロック・レートも含まれている。
が一部のシフト・レジスタのクロックに使用するクロック・レートも含まれています。

2C33内部のディスク関連ハードウェアには以下のものがある：
- 8ビット・シリアル・アウト／パラレル・イン・シフトレジスタ（SR）（ディスクに格納するデータをシリアライズするため 
ディスクに格納するためのデータをシリアライズする)
- 8ビット・シリアル・イン/パラレル・アウトSR（ディスクからのシリアル・データのアセンブル用）
- 16ビット巡回冗長検査（CRC）SR（poly=10001000000100001b（X25規格 
規格)
- ジョンソン・カウンタとして使用される4ビットSR（このカウンタは 
ビット数を記録する)

注：この文書では、2C33 の内部アーキテクチャの詳細には触れない。
2C33の実際の設計図を持っていないので）。
2C33). 2C33には、（追加のシフトレジスタなど）他のハードウェアがあるかもしれません。
があるかもしれません。このアーキテクチャ情報は 
プログラマーに2C33の内部で何が起こっているのかのアイデアを与えるために提供されているだけです。
2C33.

ディスクポート
----------
- ポート $402x は書き込み専用
- ポート $403x は読み取り専用

ここではディスク関連ポートのみ記載。ディスク関連ポートのみ記載しています。
他のFDSポート（サウンド、タイマーなど）については、他のFDS関連文書を参照してください、 
など)。


+-----+
|$4024|
+-----+
データ書き込みレジスタ。

このレジスタにプログラムされたデータは、次にシフト・レジスタにロードされる8ビット量となる。
量となり、シフト・レジスタにロードされる。
シフト・レジスタにロードされ(次にバイト転送フラグが立ちます)、シフト・アウトされてRAMアダプタ・ケーブルの5番ピン(2C33の52番ピン)に現れます。
(2C33ピン52)。


+-----+
|$4025|
+-----+
FDSコントロール。

ビット記述
--- -----------
0：RAMアダプタケーブルのCピン(2C33ピン48)に電気的に接続。アクティブ(0)の時 
アクティブ(0)の時、ディスク・ドライブ・モーターを停止させる。この間、$4025.1は何の効果もない。
は影響しない。

1：RAMアダプタケーブルの3番ピン（2C33の49番ピン）に電気的に接続されています。アクティブ時 
アクティブ(0)の場合、ディスク・ドライブ・モーターがオンになります。このビットは、ディスク転送中 
そうでない場合、$4032.1は常に1を返します。非アクティブ時 
ディスク・ドライブ・モーターは、ディスク・ヘッドがディスクの最も内側のトラックに到達するまでオン状態を維持します。
に到達するまで、ディスク・ドライブ・モーターはオン状態を維持する。

2: RAMアダプタ・ケーブルのピン1(2C33ピン50)に電気的に接続されています。
ディスク・データの転送方向を制御する。ディスク・データを読み出す場合は 1 に設定し、書き込む場合は 0 に設定する。
書き込み。

3: ミラーリング・コントロール。0 = 水平、1 = 垂直。

4: CRC 制御。ROM BIOSサブルーチンは、ブロック終端のCRCデータを処理している間、このビットを設定する。
データ処理中に設定されます。なぜこのビットがブロック読み出し中に設定されるのかは不明である。
ブロック読み出し中にこのビットがセットされる理由は不明ですが、ブロック書き込み中にこのビットがセットされると、2C33に現在の内容をパイプで送るように指示します。
のデータは事実上無視されます。
4024のデータはこの間事実上無視される)。

5: 常に1にセット(使用は不明)

6: このビットは通常、ディスクヘッドがディスク上のGAP期間中にセットされる。
ディスクのGAP期間中にセットされる。この時、2C33 の内部 CRC アキュムレータにリセットを発行します。
アキュムレータにリセットを発行します。

読み出しの間、このビットをセットすると、2C33 は最初のセットビット（ブロックスタートマーク）を待つように指示します。
ビット(ブロックスタートマーク)がディスクから読み出されるのを待つように指示します。
FDSの内部シフトレジスタにシリアルデータを蓄積する前に、ディスクから最初のセットビット（ブロックスタートマーク）が読み出されるのを待つよう2C33に指示します。
転送準備完了フラグを設定します。
を設定します。）

書き込みの間、このビットを設定すると、2C33は直ちに$4024の内容をシフト・レジスタにロードします。
の内容を即座にシフト・レジスタにロードし、バイト転送フラグを設定し、シフト・レジスタから 
シフト・レジスタからディスクへのデータ書き込みを開始します。
を繰り返す。このビットが0である間、$4024のデータは無視されます。
のデータは無視され、代わりに0 のストリームがディスクに書き込まれます。

7: バイト転送フラグが立つとIRQを発生します。

+-----------+
|$4026/$4033|
+-----------+
それぞれ、外部コネクタ出力/入力。の出力は、$4026 
の出力(4.7KΩのプルアップ付きオープンコレクタ(ビット7を除く))は、$4033の入力と共有される。
の入力と共有されます。

ビット 2C33 ext.con
--- ---- -------
0 44 3
1 43 4
2 42 5
3 41 6
4 40 7
5 39 8
6 38 9
7 37 -

このビット 7 は、ドライブの電源状態のステータスを報告するために使用されます（1 = 電源良好）。
)の状態を報告するために使用されます。RAMアダプター・ケーブルのピン6に電気的に接続されています。
でバッテリーの状態を確認する前に、$4026 ビット 7 を 1 に設定する必要があります。
4033 を使用してバッテリーの状態を確認するには、$4026 のビット 7 を 1 に設定する必要があります (設定しない場合は常に 0 が返されます)。

+-----+
|$4030|
+-----+
2C33ステータス

ビット説明
--- -----------
0: IRQタイマレジスタに関連する(ここでは説明しない)。

1: バイト転送フラグ。8ビットがRAMアダプタとディスク・ドライブの間で転送されるたびに設定される。
RAMアダプタとディスクドライブの間で8ビットが転送されるたびにセットされる(サービス$4024/$4031)。4024、$4031、$4030がサービスされるとリセットされる、 
または$4030がサービスされたときにリセットされる。

4: CRCレジスタに0が格納されている場合はクリア。
CRCに合格したことを示す）。

6: 不明。おそらく$4032.1に関連。

7: 不明。おそらく$4023.0に関係する。

+-----+
|$4031|
+-----+
データ・レジスタの読み出し。

このレジスタはバイト転送フラグが立つたびに内部シフトレジスタの内容がロードされる。
バイト転送フラグが立つたびに、このレジスタには内部のシフト・レジスタの内容がロードされます。シフト・レジスタは 
RAMアダプタ・ケーブルの9番ピン(2C33の51番ピン)を介してシリアル・データを受け取ります。


+-----+
|$4032|
+-----+
ディスク・ドライブのステータス。

ビット説明
--- -----------
0：RAMアダプタケーブルのAピン(2C33ピン45)に電気的に接続されている。アクティブ(0)の場合 
ディスクがドライブに挿入されていることを示します。

1: RAMアダプタ・ケーブル(2C33ピン46)のピンBに電気的に接続。この信号が 
この信号が負(-_)に遷移すると、ドライブ・ヘッドが現在最も外側のトラック(2C33ピン46)にあることを示す。
が最も外側のトラック (ディスクの先頭) にあることを示します。このビットは 
このビットは、ディスク・ドライブ・ヘッドが最も内側のトラック(ディスクの終端)に進むまで0を維持します。
に進むまで、または$4025.1が1のときは、このビットは0のままです。

2: RAMアダプタケーブルの7番ピン(2C33ピン47)に電気的に接続されている。アクティブ(0)の場合 
アクティブ(0)の場合、ディスクが挿入され、書き込み可能であることを示す。
リードオンリーであることを示す。）

6: 1を返すと考えられる。

